name: Build Pharaoh OS ISO

on:
  push:
  workflow_dispatch:

jobs:
  build-iso:
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: System deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential debootstrap grub-pc-bin grub-efi-amd64-bin \
            xorriso mtools squashfs-tools qemu-system-x86 nasm curl git \
            flatpak apparmor apparmor-utils nftables clang cmake ninja-build \
            pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Enable Flutter Linux desktop
        run: |
          flutter config --enable-linux-desktop
          flutter --version

      # --- Detect where the Makefile / scripts live (root or subfolder) ---
      - name: Detect build directory
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          BUILD_DIR="."
          if [ -f Makefile ]; then
            BUILD_DIR="."
          else
            MF="$(git ls-files | grep -E '(^|/)Makefile$' | head -n1 || true)"
            if [ -n "$MF" ]; then
              BUILD_DIR="$(dirname "$MF")"
            else
              SB="$(git ls-files | grep -E '(^|/)scripts/build-rootfs\.sh$' | head -n1 || true)"
              if [ -n "$SB" ]; then
                BUILD_DIR="$(dirname "$(dirname "$SB")")"
              fi
            fi
          fi
          echo "BUILD_DIR=$BUILD_DIR" | tee -a "$GITHUB_ENV"
          echo "Using BUILD_DIR=$BUILD_DIR"

      # --- Build using Makefile when present; otherwise fall back to scripts ---
      - name: Build rootfs & shell
        shell: bash
        working-directory: ${{ env.BUILD_DIR }}
        run: |
          set -xeuo pipefail
          if [ -d scripts ]; then chmod +x scripts/*.sh || true; fi

          if [ -f Makefile ]; then
            make -n deps     >/dev/null 2>&1 && make deps     || echo "no deps target"
            make -n rootfs   >/dev/null 2>&1 && make rootfs   || { [ -f scripts/build-rootfs.sh ] && bash scripts/build-rootfs.sh; }
