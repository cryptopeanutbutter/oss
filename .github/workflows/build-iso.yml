name: Build Pharaoh OS ISO
on:
  push:
  workflow_dispatch:

jobs:
  build-iso:
    runs-on: ubuntu-22.04
    timeout-minutes: 90

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Minimal toolchain needed by typical OS Makefiles (adjust in repo later if you add more)
      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential gcc-multilib nasm \
            grub-pc-bin xorriso mtools

      # Show the Makefile targets so we know what's available
      - name: List Makefile targets
        run: |
          if [ -f Makefile ]; then
            echo "== Makefile targets =="
            make -qp | awk -F':' '/^[a-zA-Z0-9][^$#\/\t=]*:([^=]|$)/ {print $1}' | sort -u
          else
            echo "No Makefile at repo root" && exit 1
          fi

      # Build using the most common target names. Falls back smartly.
      - name: Build ISO via Makefile
        shell: bash
        run: |
          set -euo pipefail
          # try common ISO targets in order
          TRY_TARGETS=("iso-bios" "isoimage" "iso" "image" "all")
          built=0
          for t in "${TRY_TARGETS[@]}"; do
            if make -n "$t" >/dev/null 2>&1; then
              echo "Running: make $t"
              make "$t"
              built=1
              break
            fi
          done
          if [ "$built" -eq 0 ]; then
            echo "No known ISO target found (tried: ${TRY_TARGETS[*]})."
            echo "Add an 'iso-bios' (or 'iso') target to your Makefile that produces an .iso in ./out/"
            exit 2
          fi

      # Find whatever ISO(s) were produced anywhere in the workspace
      - name: Locate ISOs
        id: findiso
        shell: bash
        run: |
          set -euo pipefail
          echo "Searching for ISO filesâ€¦"
          mapfile -t ISO_LIST < <(find "$GITHUB_WORKSPACE" -type f -name '*.iso' | sort || true)
          if [ "${#ISO_LIST[@]}" -eq 0 ]; then
            echo "No ISO found after build."
            exit 3
          fi
          mkdir -p out
          # copy first two with stable names
          cp -f "${ISO_LIST[0]}" out/PharaohOS-bios.iso || true
          if [ "${#ISO_LIST[@]}" -ge 2 ]; then cp -f "${ISO_LIST[1]}" out/PharaohOS-uefi.iso || true; fi
          echo "Found ISOs:"
          printf '%s\n' "${ISO_LIST[@]}"
          echo "bios_path=out/PharaohOS-bios.iso" >> "$GITHUB_OUTPUT"
          echo "uefi_path=out/PharaohOS-uefi.iso" >> "$GITHUB_OUTPUT"
          ls -lh out || true

      - name: Upload BIOS ISO (if present)
        uses: actions/upload-artifact@v4
        with:
          name: PharaohOS-bios.iso
          path: out/PharaohOS-bios.iso
          if-no-files-found: warn

      - name: Upload UEFI ISO (if present)
        uses: actions/upload-artifact@v4
        with:
          name: PharaohOS-uefi.iso
          path: out/PharaohOS-uefi.iso
          if-no-files-found: warn

      # Safety net: upload ANY *.iso anywhere if the normalized copies didn't exist
      - name: Upload any ISOs (fallback)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pharaoh-os-isos
          path: ${{ github.workspace }}/**/*.iso
          if-no-files-found: warn
